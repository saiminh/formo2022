@use './breakpoints.scss' as bps;

@include bps.bp(bigTablet) {  

  .wp-block-columns > .wp-block-column:not([class*="span"]) {
    padding-left: calc( 0.5 * var(--wp--custom--spacing--between) );
    padding-right: calc( 0.5 * var(--wp--custom--spacing--between) );
    &:first-child {
      margin-left: calc( -0.5 * var(--wp--custom--spacing--between) );
    }
    &:last-child {
      margin-right: calc( -0.5 * var(--wp--custom--spacing--between) );
    }
  }

  @for $i from 1 through 12 {
    .span#{$i} {
      flex-basis: var(--wp--custom--width--col-#{$i})!important;
      flex-shrink: 0;
      flex-grow: 0!important;
      padding-left: calc( 0.5 * var(--wp--custom--spacing--between) );
      padding-right: calc( 0.5 * var(--wp--custom--spacing--between) );
      width: var(--wp--custom--width--col-#{$i})!important;
    }
    .offset#{$i},
    body .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)).offset#{$i} {
      margin-left: var(--wp--custom--width--col-#{$i})!important;
    }
    [class*="span"] [class*="span"].offset#{$i}, [class*="span"] [class*="span"].offset#{$i}:first-child {
      margin-left: calc( -.5 * var(--wp--custom--spacing--between) + var(--wp--custom--width--col-#{$i}) )!important;
    }
  }
  
  [class*="span"] [class*="span"]:first-child {
    margin-left: calc( -.5 * var(--wp--custom--spacing--between) )!important;
  }

  //this is to make sure gridlines align, the flex-grow will make sure the widths match up
  .wp-block-columns:not(.is-not-stacked-on-mobile) > .wp-block-column[class*="span"][style*="flex-basis"] {
    flex-grow: 0;
  }
  .gridline {
    border-right: 1px solid;
  }
  .gridline-left {
    border-left: 1px solid;
    position: relative;
    left: -0.5px;
  }
  .wp-block-column.content-space-between {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-self: stretch;
  }
  .wp-block-column.content-centered {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-self: stretch;
  }
  .wp-block-column.content-bottom {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-self: stretch;
    & > :last-child {
      margin-bottom: 0;
    }
    & > p:last-child {
      padding-bottom: 0;
      &:after {
        content: none;
      }
    }
  }
  .parent-height {
    height: 100%;
  }

  [class*="span"] > [class*="span"]:not([class*="offset"]):not(.wp-block-column:first-child) {
    margin-left: calc(-0.5 * var(--wp--custom--spacing--between));
  }
  [class*="span"] > * + [class*="span"]:not([class*="offset"]) {
    margin-left: 0;
  }

  .gridline-middle-bg, 
  .gridline-col3-bg {
    position: relative;
    flex-grow: 0;

      &:before {
      content: '';
      position: absolute;
      top: 0;
      left: calc(50% - 0.5px );
      width: 1px;
      height: 100%;
      border-left: 1px solid;
      z-index: 0;
    }
    & > * {
      position: relative;
      z-index: 1;
    }
  }

  .gridline-col3-bg { 
    &:before {
      left: calc( var(--wp--custom--width--col-3) - 1px );
    }
    &.alignfull:before {
      left: calc( var(--wp--custom--spacing--outer) + var(--wp--custom--width--col-3) - 1px );
    }
  }

  // Oh man, this is bcs even though box-sizing: border-box is set, the calculated value of left: 100%  gets reduced by the width of any border...
  .gridline-middle-bg.gridline,
  .gridline-middle-bg.gridline-left {
    &::before {
      left: calc(50% - .5px );
    }
  }

  .wp-block-column.gridline-middle-bg > * {
    position: relative;
    z-index: 1;
  }

  .wp-block-column:nth-child(2).gridline-middle-bg > * {
    position: relative;
    z-index: 1;
  }
  .gridline-covers-center:after {
    content: '';
    position: absolute;
    top: 0;
    left: calc(50% - 1px);
    width: 1px;
    height: 100%;
    border-left: 1px solid;
  }
  .gridline-bg-fromcenter {
    position: relative;

    & > * {
      position: relative;
      z-index: 1;
    }

    &:before {
      content: '';
      position: absolute;
      top: 50%;
      left: calc(50% - 1px);
      width: 1px;
      height: 50%;
      border-left: 1px solid;
      z-index: 0;
    }
  }
}


.has-border-bottom {
  border-bottom: 1px solid;
}

@include bps.bp-between(bigTablet, smallTablet){
  .gridline {
    border-right: 1px solid;
    margin-right: -1px;
  }
}

h1, h2, h3, h4 {
  &.gridline {
    margin-bottom: 0;
    padding-bottom: .25em;
  }
}

.text-overflow-span12 {
  min-width: var(--wp--custom--width--col-12);
}

.wp-block-post-template.is-flex-container, .wp-block-query-loop.is-flex-container {
  gap: var(--wp--custom--spacing--between);
}

.wp-block-post-template.is-flex-container.is-flex-container.columns-4 > li {

  width: calc( var(--wp--custom--width--col-3) - .752 * var(--wp--custom--spacing--between) );
  flex-basis: calc( var(--wp--custom--width--col-3) - .752 * var(--wp--custom--spacing--between) );
  
  @include bps.bp-down(large) {
    width: calc( var(--wp--custom--width--col-6) - .752 * var(--wp--custom--spacing--between) );
    flex-basis: calc( var(--wp--custom--width--col-6) - .752 * var(--wp--custom--spacing--between) );
  }
  
  @include bps.bp-down(smallTablet) {
    width: var(--wp--custom--width--col-12);
    flex-basis: var(--wp--custom--width--col-12);
    margin-left: auto;
    margin-right: auto;
  }
}

.wp-block-post-template.is-flex-container.is-flex-container.columns-4 > li:nth-child(3) {

  width: calc( var(--wp--custom--width--col-3) - .752 * var(--wp--custom--spacing--between) );
  flex-basis: calc( var(--wp--custom--width--col-3) - .752 * var(--wp--custom--spacing--between) );
  height: calc( var(--wp--custom--width--col-3) - .752 * var(--wp--custom--spacing--between) );
  align-self: center;
  
  @include bps.bp-down(large) {
    width: calc( var(--wp--custom--width--col-6) - .752 * var(--wp--custom--spacing--between) );
    flex-basis: calc( var(--wp--custom--width--col-6) - .752 * var(--wp--custom--spacing--between) );
    height: calc( var(--wp--custom--width--col-6) - .752 * var(--wp--custom--spacing--between) );
  }
  
  @include bps.bp-down(smallTablet) {
    width: var(--wp--custom--width--col-12);
    height: var(--wp--custom--width--col-12);
    flex-basis: var(--wp--custom--width--col-12);
    margin-left: auto;
    margin-right: auto;
  }
}

@include bps.bp-down(bigTablet) {
  // to create some vertical spacing between mobile elements
  :where(body .is-layout-flex) {
    gap: 1em;
  }
  .wp-block-column:empty + .wp-block-column:empty {
    display: none;
  }
  .wp-block-columns + .wp-block-columns {
    margin-top: 1em
  }
}
@include bps.bp(bigTablet) {
  .is-straddling-gridline {
    transform: translateX( calc( -50% - 0.5 * var(--wp--custom--spacing--between) ) );
  }
}